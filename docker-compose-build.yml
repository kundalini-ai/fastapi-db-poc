version: '3.8'

services:
  fastapi-template:
    container_name: fastapi-template
    build:
      context: .
      dockerfile: Dockerfile
      target: local-development
    image: fastapi-template
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
      - ./setup.cfg:/root/.config/flake8
    environment:
      DATABASE_URL: postgresql://myuser:mypassword@db:5432/mydatabase
      QDRANT_URL: http://qdrant:6333
    depends_on:
      db:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    entrypoint: ["/usr/local/bin/wait-for", "db:5432", "--", "uvicorn", "app.api:app", "--host", "0.0.0.0", "--port", "8000"]
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s

  db:
    image: postgres:latest
    container_name: fastapi-template-db
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d 'user=myuser dbname=mydatabase host=localhost port=5432'"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 40s

  qdrant:
    build:
      context: .
      dockerfile: qdrant.Dockerfile
    container_name: qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_storage:/qdrant/storage
    healthcheck:
      test: [ "CMD-SHELL", "curl -s http://localhost:6333/healthz | grep -q 'healthz check passed' || exit 1" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  qdrant_storage:
